package graph

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.44

import (
	"context"
	"fmt"

	"github.com/PointFiveLabs/graphql-schema-filter/example/graph/model"
)

// CreateTodo is the resolver for the createTodo field.
func (r *mutationResolver) CreateTodo(ctx context.Context, input model.NewTodo) (*model.Todo, error) {
	panic(fmt.Errorf("not implemented: CreateTodo - createTodo"))
}

// InternalMutation is the resolver for the internalMutation field.
func (r *mutationResolver) InternalMutation(ctx context.Context) (bool, error) {
	panic(fmt.Errorf("not implemented: InternalMutation - internalMutation"))
}

// Todos is the resolver for the todos field.
func (r *queryResolver) Todos(ctx context.Context) ([]*model.Todo, error) {
	return []*model.Todo{
		{
			ID:       "1",
			Text:     "todo 1",
			Done:     false,
			User:     &model.User{ID: "1", Name: "user 1"},
			IsGlobal: false,
		},
	}, nil
}

// InternalQuery is the resolver for the internalQuery field.
func (r *queryResolver) InternalQuery(ctx context.Context) (bool, error) {
	return true, nil
}

// Mutation returns MutationResolver implementation.
func (r *Resolver) Mutation() MutationResolver { return &mutationResolver{r} }

// Query returns QueryResolver implementation.
func (r *Resolver) Query() QueryResolver { return &queryResolver{r} }

type mutationResolver struct{ *Resolver }
type queryResolver struct{ *Resolver }
